// <auto-generated/>
#pragma warning disable

namespace Internal.Generated.WolverineHandlers
{
    // START: WithMiddlewareRequestHandler1974996039
    [global::System.CodeDom.Compiler.GeneratedCode("JasperFx", "1.0.0")]
    public sealed class WithMiddlewareRequestHandler1974996039 : Wolverine.Runtime.Handlers.MessageHandler
    {


        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            // The actual message body
            var withMiddlewareRequest = (WfxTest.Api.Handlers.WithMiddlewareRequest)context.Envelope.Message;

            (var handlerContinuation1, var outgoingMessages) = await WfxTest.Api.ValidateMiddlewareWithOutgoingMessages.Validate(withMiddlewareRequest).ConfigureAwait(false);
            // Evaluate whether or not the execution should stop based on the HandlerContinuation value
            if (handlerContinuation1 == Wolverine.HandlerContinuation.Stop) return;
            System.Diagnostics.Activity.Current?.SetTag("message.handler", "WfxTest.Api.Handlers.WithMiddlewareHandler");
            
            // The actual message execution
            var outgoing1 = await WfxTest.Api.Handlers.WithMiddlewareHandler.Handle(withMiddlewareRequest).ConfigureAwait(false);

            
            // Outgoing, cascaded message
            await context.EnqueueCascadingAsync(outgoing1).ConfigureAwait(false);

        }

    }

    // END: WithMiddlewareRequestHandler1974996039
    
    
}

